{
  "integrations": {
    "salesforce": {
      "duplicateCheck": {
        "pipeline": {
          "stages": [
            {
              "tasks": [
                {
                  "entity": "lead",
                  "tree": {
                    "operator": "and",
                    "subconditions": [
                      {
                        "field": "IsConverted",
                        "operator": "eq",
                        "value": false,
                        "optional": true
                      },
                      {
                        "operator": "or",
                        "subconditions": [
                          {
                            "field": "Email",
                            "operator": "in",
                            "value": "{{ address.email }}",
                            "filters": [
                              "return !isEmailGeneric(address.email)"
                            ]
                          },
                          {
                            "operator": "and",
                            "subconditions": [
                              {
                                "field": "FirstName",
                                "operator": "allIn",
                                "value": "{{ address.firstName }}"
                              },
                              {
                                "field": "LastName",
                                "operator": "allIn",
                                "value": "{{ address.lastName }}"
                              },
                              {
                                "field": "Company",
                                "operator": "allIn",
                                "value": "{{ address.organization }}"
                              }
                            ],
                            "filters": [
                              "return (address.firstName.length >= 3 || address.lastName.length >= 3) && address.organization.length >= 3"
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "missingDataLabel": "NO_EMAIL_OR_NAME_AND_COMPANY_ENTERED"
                },
                {
                  "entity": "contact",
                  "tree": {
                    "operator": "or",
                    "subconditions": [
                      {
                        "field": "Email",
                        "operator": "in",
                        "value": "{{ address.email }}",
                        "filters": [
                          "return !isEmailGeneric(address.email)"
                        ]
                      },
                      {
                        "operator": "and",
                        "subconditions": [
                          {
                            "field": "FirstName",
                            "operator": "allIn",
                            "value": "{{ address.firstName }}"
                          },
                          {
                            "field": "LastName",
                            "operator": "allIn",
                            "value": "{{ address.lastName }}"
                          }
                        ],
                        "filters": [
                          "return (address.firstName.length >= 3 || address.lastName.length >= 3)"
                        ]
                      }
                    ]
                  },
                  "missingDataLabel": "NO_EMAIL_OR_NAME_ENTERED"
                },
                {
                  "entity": "account",
                  "tree": {
                    "operator": "or",
                    "subconditions": [
                      {
                        "field": "Website",
                        "operator": "in",
                        "value": "{{ getDomainFromURL(address.website) }}",
                        "filters": [
                          "return address.website.length > 5"
                        ]
                      },
                      {
                        "field": "Name",
                        "operator": "allIn",
                        "value": "{{ address.organization }}",
                        "filters": [
                          "return address.organization.length >= 3"
                        ]
                      }
                    ]
                  },
                  "missingDataLabel": "NO_WEBSITE_OR_NAME_ENTERED"
                }
              ],
              "results": [],
              "post": [
                [
                  "var propertyWeights = []",
                  "propertyWeights.push({ duplicatePropertyName: 'FirstName', snapaddyPropertyName: 'firstName', fuzzyWeight: 1 })",
                  "propertyWeights.push({ duplicatePropertyName: 'LastName', snapaddyPropertyName: 'lastName', fuzzyWeight: 1 })",
                  "propertyWeights.push({ duplicatePropertyName: 'Email', snapaddyPropertyName: 'email', fuzzyWeight: 4 })",
                  "propertyWeights.push({ duplicatePropertyName: 'CompanyName', snapaddyPropertyName: 'organization', fuzzyWeight: 1 })",
                  "pipeline.taskResults.lead.duplicates = sortDuplicates(pipeline.taskResults.lead.duplicates, address, propertyWeights, 'DESC')",
                  "pipeline.taskResults.lead.suggested = pipeline.taskResults.lead.duplicates[0]",
                  "return pipeline"
                ],
                [
                  "var propertyWeights = []",
                  "propertyWeights.push({ duplicatePropertyName: 'FirstName', snapaddyPropertyName: 'firstName', fuzzyWeight: 1 })",
                  "propertyWeights.push({ duplicatePropertyName: 'LastName', snapaddyPropertyName: 'lastName', fuzzyWeight: 1 })",
                  "propertyWeights.push({ duplicatePropertyName: 'Email', snapaddyPropertyName: 'email', fuzzyWeight: 4 })",
                  "pipeline.taskResults.contact.duplicates = sortDuplicates(pipeline.taskResults.contact.duplicates, address, propertyWeights, 'DESC')",
                  "pipeline.taskResults.contact.suggested = pipeline.taskResults.contact.duplicates[0]",
                  "return pipeline"
                ],
                [
                  "var propertyWeights = []",
                  "propertyWeights.push({ duplicatePropertyName: 'Name', snapaddyPropertyName: 'organization', fuzzyWeight: 3 })",
                  "propertyWeights.push({ duplicatePropertyName: 'Website', snapaddyPropertyName: 'website', fuzzyWeight: 3 })",
                  "propertyWeights.push({ duplicatePropertyName: 'BillingCity', snapaddyPropertyName: 'city', fuzzyWeight: 1 })",
                  "propertyWeights.push({ duplicatePropertyName: 'BillingPostalCode', snapaddyPropertyName: 'zip', fuzzyWeight: 0, exactMatchModifier: 1 })",
                  "pipeline.taskResults.account.duplicates = sortDuplicates(pipeline.taskResults.account.duplicates, address, propertyWeights, 'DESC')",
                  "pipeline.taskResults.account.suggested = pipeline.taskResults.account.duplicates[0]",
                  "return pipeline"
                ]
              ]
            }
          ],
          "mapResults": [
            "return {",
            "  lead: pipeline.stages[0].results[0],",
            "  contact: pipeline.stages[0].results[1],",
            "  account: pipeline.stages[0].results[2],",
            "}"
          ]
        }
      }
    }
  }
}