{
  "duplicateCheck": {
    "settings": {},
    "pipeline": {
      "stages": [
        {
          "tasks": [
            {
              "tree": {
                "operator": "and",
                "subconditions": [
                  {
                    "field": "ContactFirstName",
                    "operator": "in",
                    "value": "{{ address.firstName }}"
                  },
                  {
                    "field": "ContactLastName",
                    "operator": "in",
                    "value": "{{ address.lastName }}"
                  },
                  {
                    "field": "Company",
                    "operator": "allIn",
                    "value": "{{ address.organization }}"
                  }
                ],
                "filters": [
                  "return (address.firstName.length >= 3 || address.lastName.length >= 3) && address.organization.length >= 3"
                ]
              },
              "entity": "lead",
              "name": "leadsNameCompany"
            },
            {
              "tree": {
                "field": "ContactEMail",
                "operator": "in",
                "value": "{{ address.email }}",
                "filters": [
                  "return !isEmailGeneric(address.email)"
                ]
              },
              "entity": "lead",
              "name": "leadsEmail"
            },
            {
              "tree": {
                "field": "Name",
                "operator": "allIn",
                "value": "{{ address.organization }}",
                "filters": [
                  "return address.organization.length >= 3"
                ]
              },
              "entity": "account",
              "name": "accountsName"
            },
            {
              "tree": {
                "field": "BusinessPartnerFormattedName",
                "operator": "allIn",
                "value": "{{ address.organization }}",
                "filters": [
                  "return address.organization.length >= 3"
                ]
              },
              "entity": "account",
              "name": "accountsBusinessPartnerFormattedName"
            },
            {
              "tree": {
                "field": "WebSite",
                "operator": "in",
                "value": "{{ getDomainFromURL(address.website) }}",
                "filters": [
                  "return address.website.length >= 5"
                ]
              },
              "entity": "account",
              "name": "accountsWebsite"
            },
            {
              "tree": {
                "field": "Email",
                "operator": "in",
                "value": "{{ address.email }}",
                "filters": [
                  "return !isEmailGeneric(address.email)"
                ]
              },
              "entity": "contact",
              "name": "contactsEmail"
            },
            {
              "tree": {
                "operator": "and",
                "subconditions": [
                  {
                    "field": "FirstName",
                    "operator": "in",
                    "value": "{{ address.firstName }}"
                  },
                  {
                    "field": "LastName",
                    "operator": "in",
                    "value": "{{ address.lastName }}"
                  }
                ],
                "filters": [
                  "return address.firstName.length >= 3 || address.lastName.length >= 3"
                ]
              },
              "entity": "contact",
              "name": "contactsName"
            }
          ],
          "post": [
            [
              "pipeline.taskResults['lead'] = collateTaskResults(pipeline, ['leadsEmail', 'leadsNameCompany'], 'ObjectID')",
              "pipeline.taskResults['account'] = collateTaskResults(pipeline, ['accountsName', 'accountsWebsite'], 'ObjectID')",
              "pipeline.taskResults['contact'] = collateTaskResults(pipeline, ['contactsName', 'contactsEmail'], 'ObjectID')",
              "return pipeline"
            ],
            [
              "var propertyWeights = []",
              "propertyWeights.push({ duplicatePropertyName: 'ContactFirstName', snapaddyPropertyName: 'firstName', fuzzyWeight: 1 })",
              "propertyWeights.push({ duplicatePropertyName: 'ContactLastName', snapaddyPropertyName: 'lastName', fuzzyWeight: 1 })",
              "propertyWeights.push({ duplicatePropertyName: 'ContactEmail', snapaddyPropertyName: 'email', fuzzyWeight: 4 })",
              "propertyWeights.push({ duplicatePropertyName: 'Company', snapaddyPropertyName: 'organization', fuzzyWeight: 1 })",
              "pipeline.taskResults.lead.duplicates = sortDuplicates(pipeline.taskResults.lead.duplicates, address, propertyWeights, 'DESC')",
              "pipeline.taskResults.lead.suggested = pipeline.taskResults.lead.duplicates[0]",
              "return pipeline"
            ],
            [
              "var propertyWeights = []",
              "propertyWeights.push({ duplicatePropertyName: 'FirstName', snapaddyPropertyName: 'firstName', fuzzyWeight: 1 })",
              "propertyWeights.push({ duplicatePropertyName: 'LastName', snapaddyPropertyName: 'lastName', fuzzyWeight: 1 })",
              "propertyWeights.push({ duplicatePropertyName: 'Email', snapaddyPropertyName: 'email', fuzzyWeight: 4 })",
              "propertyWeights.push({ duplicatePropertyName: 'AccountFormattedName', snapaddyPropertyName: 'email', fuzzyWeight: 1 })",
              "pipeline.taskResults.contact.duplicates = sortDuplicates(pipeline.taskResults.contact.duplicates, address, propertyWeights, 'DESC')",
              "pipeline.taskResults.contact.suggested = pipeline.taskResults.contact.duplicates[0]",
              "return pipeline"
            ],
            [
              "var propertyWeights = []",
              "propertyWeights.push({ duplicatePropertyName: 'BusinessPartnerFormattedName', snapaddyPropertyName: 'organization', fuzzyWeight: 3 })",
              "propertyWeights.push({ duplicatePropertyName: 'WebSite', snapaddyPropertyName: 'website', fuzzyWeight: 3 })",
              "propertyWeights.push({ duplicatePropertyName: 'City', snapaddyPropertyName: 'city', fuzzyWeight: 1 })",
              "propertyWeights.push({ duplicatePropertyName: 'StreetPostalCode', snapaddyPropertyName: 'zip', fuzzyWeight: 0, exactMatchModifier: 1 })",
              "pipeline.taskResults.account.duplicates = sortDuplicates(pipeline.taskResults.account.duplicates, address, propertyWeights, 'DESC')",
              "pipeline.taskResults.account.suggested = pipeline.taskResults.account.duplicates[0]",
              "return pipeline"
            ]
          ]
        }
      ],
      "mapResults": [
        "return {",
        "  lead: pipeline.taskResults['lead'],",
        "  account: pipeline.taskResults['account'],",
        "  contact: pipeline.taskResults['contact'],",
        "};"
      ]
    }
  }
}
